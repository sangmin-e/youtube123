// Î°úÍπÖ Ïú†Ìã∏Î¶¨Ìã∞
class Logger {
    constructor() {
        this.isDevelopment = process.env.NODE_ENV === 'development';
    }

    info(message, data = null) {
        const timestamp = new Date().toISOString();
        console.log(`[${timestamp}] ‚ÑπÔ∏è  INFO: ${message}`);
        if (data && this.isDevelopment) {
            console.log('üìä Îç∞Ïù¥ÌÑ∞:', data);
        }
    }

    success(message, data = null) {
        const timestamp = new Date().toISOString();
        console.log(`[${timestamp}] ‚úÖ SUCCESS: ${message}`);
        if (data && this.isDevelopment) {
            console.log('üìä Îç∞Ïù¥ÌÑ∞:', data);
        }
    }

    warning(message, data = null) {
        const timestamp = new Date().toISOString();
        console.warn(`[${timestamp}] ‚ö†Ô∏è  WARNING: ${message}`);
        if (data && this.isDevelopment) {
            console.warn('üìä Îç∞Ïù¥ÌÑ∞:', data);
        }
    }

    error(message, error = null) {
        const timestamp = new Date().toISOString();
        console.error(`[${timestamp}] ‚ùå ERROR: ${message}`);
        if (error) {
            console.error('üîç ÏóêÎü¨ ÏÉÅÏÑ∏:', error);
            if (this.isDevelopment && error.stack) {
                console.error('üìö Ïä§ÌÉù Ìä∏Î†àÏù¥Ïä§:', error.stack);
            }
        }
    }

    apiRequest(method, url, status, duration) {
        const timestamp = new Date().toISOString();
        const statusIcon = status >= 400 ? '‚ùå' : status >= 300 ? '‚ö†Ô∏è' : '‚úÖ';
        console.log(`[${timestamp}] ${statusIcon} API: ${method} ${url} - ${status} (${duration}ms)`);
    }

    searchQuery(query, resultCount, duration) {
        const timestamp = new Date().toISOString();
        console.log(`[${timestamp}] üîç SEARCH: "${query}" ‚Üí ${resultCount}Í∞ú Í≤∞Í≥º (${duration}ms)`);
    }
}

module.exports = new Logger();
